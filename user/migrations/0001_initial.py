# Generated by Django 2.2 on 2020-05-05 23:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('email_verified', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('beta_tester', models.BooleanField(default=True)),
                ('email_verification_code', models.EmailField(max_length=254, unique=True)),
                ('warframe_account_verification_code', models.CharField(default='', max_length=12, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='GamingPlatform',
            fields=[
                ('gaming_platform_id', models.AutoField(primary_key=True, serialize=False)),
                ('platform_name', models.CharField(max_length=32, null=True)),
            ],
            options={
                'db_table': 'user_gaming_platform',
            },
        ),
        migrations.CreateModel(
            name='WarframeAccount',
            fields=[
                ('warframe_account_id', models.AutoField(primary_key=True, serialize=False)),
                ('warframe_alias', models.CharField(default='', max_length=32, unique=True)),
                ('is_blocked', models.BooleanField(default=False)),
                ('gaming_platform_id', models.ForeignKey(db_column='gaming_platform_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='user.GamingPlatform')),
            ],
            options={
                'db_table': 'warframe_account',
            },
        ),
        migrations.CreateModel(
            name='PasswordRecovery',
            fields=[
                ('password_recovery_id', models.AutoField(primary_key=True, serialize=False)),
                ('recovery_code', models.CharField(default='', max_length=32)),
                ('dateCodeCreated', models.DateTimeField(auto_now_add=True)),
                ('dateCodeUsed', models.DateTimeField(blank=True, default=None, null=True)),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_password_recovery',
            },
        ),
        migrations.CreateModel(
            name='EmailVerificationCode',
            fields=[
                ('email_verification_code_id', models.AutoField(primary_key=True, serialize=False)),
                ('email_verification_code', models.CharField(default='', max_length=32)),
                ('user_id', models.OneToOneField(db_column='user_id', on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_email_verification_code',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='linked_warframe_account_id',
            field=models.OneToOneField(db_column='linked_warframe_account_id', null=True, on_delete=django.db.models.deletion.PROTECT, to='user.WarframeAccount'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
